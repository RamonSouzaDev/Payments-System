name: Laravel CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: payment_system_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, dom, fileinfo, mysql
        coverage: xdebug
        tools: composer:v2

    - uses: actions/checkout@v3

    - name: Debug Repository Structure
      run: |
        echo "Current directory: $(pwd)"
        echo "Directory content:"
        ls -la
        find . -name "artisan" -type f | xargs echo "Artisan file found at:"
        find . -name "composer.json" -type f | xargs echo "composer.json found at:"
        find . -name ".env.example" -type f | xargs echo ".env.example found at:"

    - name: Find Laravel Project
      id: find-laravel
      run: |
        ARTISAN_FILE=$(find . -name "artisan" -type f | head -n 1)
        if [ -n "$ARTISAN_FILE" ]; then
          LARAVEL_DIR=$(dirname "$ARTISAN_FILE")
          echo "Found Laravel project at: $LARAVEL_DIR"
          echo "laravel_dir=$LARAVEL_DIR" >> $GITHUB_OUTPUT
        else
          echo "Laravel project not found"
          exit 1
        fi

    - name: Install Dependencies
      run: |
        cd ${{ steps.find-laravel.outputs.laravel_dir }}
        composer install --prefer-dist --no-interaction --no-progress

    - name: Copy .env
      run: |
        cd ${{ steps.find-laravel.outputs.laravel_dir }}
        if [ -f ".env.example" ]; then
          cp .env.example .env
          echo ".env file created from .env.example"
        else
          echo "APP_NAME=\"Payment System\"" > .env
          echo "APP_ENV=testing" >> .env
          echo "APP_KEY=" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_URL=http://localhost" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=payment_system_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=password" >> .env
          echo "Basic .env file created manually"
        fi
        cat .env

    - name: Generate App Key
      run: |
        cd ${{ steps.find-laravel.outputs.laravel_dir }}
        php artisan key:generate --force

    - name: Directory Permissions
      run: |
        cd ${{ steps.find-laravel.outputs.laravel_dir }}
        chmod -R 777 storage bootstrap/cache

    - name: Configure Database
      run: |
        cd ${{ steps.find-laravel.outputs.laravel_dir }}
        php artisan config:clear
        php artisan migrate --force || echo "Migration failed, but continuing..."

    - name: Execute Tests
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: payment_system_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: |
        cd ${{ steps.find-laravel.outputs.laravel_dir }}
        vendor/bin/phpunit --coverage-clover=coverage.xml

    - name: Upload Coverage Report
      uses: codecov/codecov-action@v3
      with:
        file: ${{ steps.find-laravel.outputs.laravel_dir }}/coverage.xml
        fail_ci_if_error: false

  laravel-deploy:
    needs: laravel-tests
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Find Laravel Project
      id: find-laravel
      run: |
        ARTISAN_FILE=$(find . -name "artisan" -type f | head -n 1)
        if [ -n "$ARTISAN_FILE" ]; then
          LARAVEL_DIR=$(dirname "$ARTISAN_FILE")
          echo "laravel_dir=$LARAVEL_DIR" >> $GITHUB_OUTPUT
          RELATIVE_PATH=$(realpath --relative-to="$(pwd)" "$LARAVEL_DIR")
          echo "relative_path=$RELATIVE_PATH" >> $GITHUB_OUTPUT
        else
          echo "Laravel project not found"
          exit 1
        fi
      
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        cat >>~/.ssh/config <<END
        Host production
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/deploy_key
          StrictHostKeyChecking no
        END
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}

    - name: Deploy to Production
      run: |
        RELATIVE_PATH="${{ steps.find-laravel.outputs.relative_path }}"
        
        if [ "$RELATIVE_PATH" = "." ]; then
          # Laravel is at repository root
          ssh production 'cd /var/www/payment-system && git pull origin main && composer install --no-interaction --prefer-dist --optimize-autoloader && php artisan migrate --force && php artisan config:cache && php artisan route:cache && php artisan view:cache'
        else
          # Laravel is in a subdirectory
          ssh production "cd /var/www/payment-system && git pull origin main && cd $RELATIVE_PATH && composer install --no-interaction --prefer-dist --optimize-autoloader && php artisan migrate --force && php artisan config:cache && php artisan route:cache && php artisan view:cache"
        fi
